server {
    listen 80;
    server_name scrumtools.app;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name scrumtools.app;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/scrumtools.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/scrumtools.app/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000" always;

    # Root directory
    root /var/www/scrumtools/dist;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/xml+rss application/atom+xml image/svg+xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval';" always;

    # Sitemap and robots.txt
    location = /sitemap.xml {
        types { } default_type "application/xml";
        add_header Cache-Control "public, max-age=3600";
    }

    location = /robots.txt {
        types { } default_type "text/plain";
        add_header Cache-Control "public, max-age=3600";
    }

    # Favicon and manifest
    location = /favicon.ico {
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    location = /favicon.svg {
        types { } default_type "image/svg+xml";
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    location = /site.webmanifest {
        types { } default_type "application/manifest+json";
        add_header Cache-Control "public, max-age=3600";
    }

    # Static assets
    location /assets {
        expires 1y;
        add_header Cache-Control "public, max-age=31536000, immutable";
        try_files $uri =404;
    }

    # OpenGraph image
    location = /og-image.svg {
        types { } default_type "image/svg+xml";
        expires 1d;
        add_header Cache-Control "public, max-age=86400";
    }

    # Handle SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Proxy WebSocket connections for socket.io
    location /socket.io/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

        proxy_pass http://localhost:3001;
        proxy_redirect off;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # API proxy
    location /api/ {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
